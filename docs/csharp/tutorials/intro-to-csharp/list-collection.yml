### YamlMime:Tutorial
title: <span data-ttu-id="094e8-101">Veri koleksiyonları genel liste türünü kullanarak yönetmeyi öğrenin</span><span class="sxs-lookup"><span data-stu-id="094e8-101">Learn to manage data collections using the generic list type</span></span>
metadata:
  title: Veri koleksiyonları - giriş C# etkileşimli öğretici
  description: Bu öğreticide, C# etkileşimli bir şekilde öğrenmek için tarayıcınızı kullanacaksınız. C# kodu yazacak ve derleme ve kodunuzu doğrudan tarayıcınızda çalıştırmaya sonuçlarını göreceksiniz.
  audience: Developer
  ms.custom: mvc
  ms.date: 10/23/2018
  level: Beginner
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: 0de2cc0434087797b9411075a98cc11dd598ed81
  ms.sourcegitcommit: 9b552addadfb57fab0b9e7852ed4f1f1b8a42f8e
  ms.translationtype: MT
  ms.contentlocale: tr-TR
  ms.lasthandoff: 04/23/2019
  ms.locfileid: "61675669"
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="094e8-105">Bu öğretici size öğretir C# etkileşimli olarak yazmak için tarayıcınızı kullanarak C# kod ve derleme ve kodunuzu çalıştıran sonuçlarını göreceksiniz.</span><span class="sxs-lookup"><span data-stu-id="094e8-105">This tutorial teaches you C# interactively, using your browser to write C# code and see the results of compiling and running your code.</span></span> <span data-ttu-id="094e8-106">Bu, bir dizi oluşturmak, değiştirmek ve koleksiyonlarda ve dizilerde keşfedin ders içerir.</span><span class="sxs-lookup"><span data-stu-id="094e8-106">It contains a series of lessons that create, modify and explore collections and arrays.</span></span>
- title: <span data-ttu-id="094e8-107">Listeleri oluşturma</span><span class="sxs-lookup"><span data-stu-id="094e8-107">Create lists</span></span>
  durationInMinutes: 2
  content: >
    <span data-ttu-id="094e8-108">Etkileşimli pencerede aşağıdaki kodu çalıştırın.</span><span class="sxs-lookup"><span data-stu-id="094e8-108">Run the following code in the interactive window.</span></span> <span data-ttu-id="094e8-109">Bunu yapmak için aşağıdaki kod bloğunu etkileşimli pencereye yazın (Değiştir `<name>` 'ınızın adıyla) ve tıklayın **çalıştırın** düğmesi:</span><span class="sxs-lookup"><span data-stu-id="094e8-109">To do that, type the following code block in the interactive window (replace `<name>` with your name) and click the **Run** button:</span></span>


    ```csharp

    var names = new List<string> { "<name>", "Ana", "Felipe" };

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    <span data-ttu-id="094e8-110">Yalnızca bir dize listesi oluşturduğunuz, üç adları bu listeye eklenmesine ve tamamı büyük harf adları kullanıma yazdırılır.</span><span class="sxs-lookup"><span data-stu-id="094e8-110">You've just created a list of strings, added three names to that list, and printed out the names in all CAPS.</span></span> <span data-ttu-id="094e8-111">Önceki öğreticilerde listede döngü öğrendiniz kavramları kullanıyorsunuz.</span><span class="sxs-lookup"><span data-stu-id="094e8-111">You're using concepts that you've learned in earlier tutorials to loop through the list.</span></span>


    <span data-ttu-id="094e8-112">Görünen adları için kodu kullanır [dize ilişkilendirme](../../language-reference/tokens/interpolated.md) özelliği.</span><span class="sxs-lookup"><span data-stu-id="094e8-112">The code to display names makes use of the [string interpolation](../../language-reference/tokens/interpolated.md) feature.</span></span> <span data-ttu-id="094e8-113">Ne zaman önünde bir `string` ile `$` karakter dizesi bildiriminde C# kod ekleme.</span><span class="sxs-lookup"><span data-stu-id="094e8-113">When you precede a `string` with the `$` character, you can embed C# code in the string declaration.</span></span> <span data-ttu-id="094e8-114">Gerçek dize, C# kodu ürettiği değeri ile değiştirir.</span><span class="sxs-lookup"><span data-stu-id="094e8-114">The actual string replaces that C# code with the value it generates.</span></span> <span data-ttu-id="094e8-115">Bu örnekte, onu değiştirir `{name.ToUpper()}` her addaki aradığınız çünkü harfleri büyük olacak şekilde dönüştürülmüş <xref:System.String.ToUpper%2A?displayProperty=nameWithType> yöntemi.</span><span class="sxs-lookup"><span data-stu-id="094e8-115">In this example, it replaces the `{name.ToUpper()}` with each name, converted to capital letters, because you called the <xref:System.String.ToUpper%2A?displayProperty=nameWithType> method.</span></span>


    <span data-ttu-id="094e8-116">Şimdi keşfetmeye devam etmek.</span><span class="sxs-lookup"><span data-stu-id="094e8-116">Let's keep exploring.</span></span>


    > [!NOTE]

    > <span data-ttu-id="094e8-117">Bu çevrimiçi kodlama deneyimi Önizleme modundadır.</span><span class="sxs-lookup"><span data-stu-id="094e8-117">This online coding experience is in preview mode.</span></span> <span data-ttu-id="094e8-118">Sorunlarla karşılaşırsanız, Lütfen bunları rapor [dotnet/try deposunda](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="094e8-118">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="094e8-119">Liste içeriklerini değiştirme</span><span class="sxs-lookup"><span data-stu-id="094e8-119">Modify list contents</span></span>
  durationInMinutes: 3
  content: >
    <span data-ttu-id="094e8-120">Kullanan oluşturduğunuz koleksiyonda <xref:System.Collections.Generic.List%601> türü.</span><span class="sxs-lookup"><span data-stu-id="094e8-120">The collection you created uses the <xref:System.Collections.Generic.List%601> type.</span></span> <span data-ttu-id="094e8-121">Bu tür, öğelerin sıralarının depolar.</span><span class="sxs-lookup"><span data-stu-id="094e8-121">This type stores sequences of elements.</span></span> <span data-ttu-id="094e8-122">Açılı ayraçlar arasındaki öğelerin türünü belirtin.</span><span class="sxs-lookup"><span data-stu-id="094e8-122">You specify the type of the elements between the angle brackets.</span></span>


    <span data-ttu-id="094e8-123">Bu önemli bir özelliği <xref:System.Collections.Generic.List%601> türüdür bunu büyüyebilen veya küçülebilen, ekleme veya öğeleri kaldırma olanak sağlar.</span><span class="sxs-lookup"><span data-stu-id="094e8-123">One important aspect of this <xref:System.Collections.Generic.List%601> type is that it can grow or shrink, enabling you to add or remove elements.</span></span> <span data-ttu-id="094e8-124">Zaten yazdığınız kodun altına aşağıdaki kodu ekleyin:</span><span class="sxs-lookup"><span data-stu-id="094e8-124">Add the following code below the code you've already written:</span></span>


    ```csharp

    Console.WriteLine();

    names.Add("Maria");

    names.Add("Bill");

    names.Remove("Ana");

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    <span data-ttu-id="094e8-125">Listenin sonuna iki daha fazla ad ekledik.</span><span class="sxs-lookup"><span data-stu-id="094e8-125">You've added two more names to the end of the list.</span></span> <span data-ttu-id="094e8-126">Ayrıca bir de kaldırdınız.</span><span class="sxs-lookup"><span data-stu-id="094e8-126">You've also removed one as well.</span></span>


    <span data-ttu-id="094e8-127"><xref:System.Collections.Generic.List%601> Tek tek öğeler tarafından başvuruda sayesinde **dizin** de.</span><span class="sxs-lookup"><span data-stu-id="094e8-127">The <xref:System.Collections.Generic.List%601> enables you to reference individual items by **index** as well.</span></span> <span data-ttu-id="094e8-128">Kullanarak öğeleri erişim `[` ve `]` belirteçleri.</span><span class="sxs-lookup"><span data-stu-id="094e8-128">You access items using the `[` and `]` tokens.</span></span> <span data-ttu-id="094e8-129">Neleri yazmış olduğunuz ve deneyin altına aşağıdaki kodu ekleyin:</span><span class="sxs-lookup"><span data-stu-id="094e8-129">Add the following code below what you've already written and try it:</span></span>


    ```csharp

    Console.WriteLine($"My name is {names[0]}.");

    Console.WriteLine($"I've added {names[2]} and {names[3]} to the list.");

    ```


    <span data-ttu-id="094e8-130">Listenin sonundan erişmesine izin verilmez.</span><span class="sxs-lookup"><span data-stu-id="094e8-130">You're not allowed to access past the end of the list.</span></span> <span data-ttu-id="094e8-131">Listenin ne kadar süre kullandığı denetleyebilirsiniz <xref:System.Collections.Generic.List%601.Count%2A> özelliği.</span><span class="sxs-lookup"><span data-stu-id="094e8-131">You can check how long the list is using the <xref:System.Collections.Generic.List%601.Count%2A> property.</span></span> <span data-ttu-id="094e8-132">Denemek için aşağıdaki kodu ekleyin:</span><span class="sxs-lookup"><span data-stu-id="094e8-132">Add the following code to try it:</span></span>


    ```csharp

    Console.WriteLine($"The list has {names.Count} people in it");

    ```


    <span data-ttu-id="094e8-133">Tıklayın **çalıştırma** yeniden sonuçları görmek için.</span><span class="sxs-lookup"><span data-stu-id="094e8-133">Click **Run** again to see the results.</span></span> <span data-ttu-id="094e8-134">En büyük geçerli dizin olduğundan C# ' ta dizinleri 0'da başlar listedeki öğelerin sayısından küçük.</span><span class="sxs-lookup"><span data-stu-id="094e8-134">In C#, indices start at 0, so the largest valid index is one less than the number of items in the list.</span></span>


    > [!NOTE]

    > <span data-ttu-id="094e8-135">Bu çevrimiçi kodlama deneyimi Önizleme modundadır.</span><span class="sxs-lookup"><span data-stu-id="094e8-135">This online coding experience is in preview mode.</span></span> <span data-ttu-id="094e8-136">Sorunlarla karşılaşırsanız, Lütfen bunları rapor [dotnet/try deposunda](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="094e8-136">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="094e8-137">Arama ve sıralama listeler</span><span class="sxs-lookup"><span data-stu-id="094e8-137">Search and sort lists</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="094e8-138">Örneklerimizi görece küçük listeleri kullanın, ancak uygulamalarınızın genellikle bazen bin numaralandırma çok daha fazla öğe ile listeleri oluşturabilirsiniz.</span><span class="sxs-lookup"><span data-stu-id="094e8-138">Our samples use relatively small lists, but your applications may often create lists with many more elements, sometimes numbering in the thousands.</span></span> <span data-ttu-id="094e8-139">İçinde büyük bu koleksiyonlara öğeleri bulmak için farklı öğeler listesinde arama yapmanız gerekmiyor.</span><span class="sxs-lookup"><span data-stu-id="094e8-139">To find elements in these larger collections, you need to search the list for different items.</span></span> <span data-ttu-id="094e8-140"><xref:System.Collections.Generic.List%601.IndexOf%2A> Yöntemi bir öğe için arar ve öğenin indisini döndürür.</span><span class="sxs-lookup"><span data-stu-id="094e8-140">The <xref:System.Collections.Generic.List%601.IndexOf%2A> method searches for an item and returns the index of the item.</span></span> <span data-ttu-id="094e8-141">Nasıl çalıştığını görmek için deneyin.</span><span class="sxs-lookup"><span data-stu-id="094e8-141">Try this to see how it works.</span></span>  <span data-ttu-id="094e8-142">Şu ana kadar yazdıklarınızı altına aşağıdaki kodu ekleyin:</span><span class="sxs-lookup"><span data-stu-id="094e8-142">Add the following code below what you've written so far:</span></span>


    ```csharp

    var index = names.IndexOf("Felipe");

    if (index != -1)
      Console.WriteLine($"The name {names[index]} is at index {index}");

    var notFound = names.IndexOf("Not Found");
      Console.WriteLine($"When an item is not found, IndexOf returns {notFound}");
    ```


    <span data-ttu-id="094e8-143">Tarafından döndürülen dizinin her zaman denetlemeniz gerekir böylece bir öğenin listesinde olup olmadığını bilemeyebilirsiniz <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="094e8-143">You may not know if an item is in the list, so you should always check the index returned by <xref:System.Collections.Generic.List%601.IndexOf%2A>.</span></span> <span data-ttu-id="094e8-144">-1 olması durumunda, öğe bulunamadı.</span><span class="sxs-lookup"><span data-stu-id="094e8-144">If it is -1, the item was not found.</span></span>


    <span data-ttu-id="094e8-145">Listenizdeki öğeleri de sıralanabilir.</span><span class="sxs-lookup"><span data-stu-id="094e8-145">The items in your list can be sorted as well.</span></span> <span data-ttu-id="094e8-146"><xref:System.Collections.Generic.List%601.Sort%2A> Yöntemi (alfabetik sırada durumunda dizeler) normal sıralarına listesinden tüm öğeleri sıralar.</span><span class="sxs-lookup"><span data-stu-id="094e8-146">The <xref:System.Collections.Generic.List%601.Sort%2A> method sorts all the items in the list in their normal order (alphabetically in the case of strings).</span></span> <span data-ttu-id="094e8-147">Bu kodu ekleyin ve yeniden çalıştırın:</span><span class="sxs-lookup"><span data-stu-id="094e8-147">Add this code and run again:</span></span>


    ```csharp

    names.Sort();

    foreach (var name in names)

    {
      Console.WriteLine($"Hello {name.ToUpper()}!");
    }

    ```


    > [!NOTE]

    > <span data-ttu-id="094e8-148">Bu çevrimiçi kodlama deneyimi Önizleme modundadır.</span><span class="sxs-lookup"><span data-stu-id="094e8-148">This online coding experience is in preview mode.</span></span> <span data-ttu-id="094e8-149">Sorunlarla karşılaşırsanız, Lütfen bunları rapor [dotnet/try deposunda](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="094e8-149">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="094e8-150">Diğer türleri listesi</span><span class="sxs-lookup"><span data-stu-id="094e8-150">Lists of other types</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="094e8-151">Kullanmakta olduğunuz `string` şimdiye listelerindeki türü.</span><span class="sxs-lookup"><span data-stu-id="094e8-151">You've been using the `string` type in lists so far.</span></span> <span data-ttu-id="094e8-152">Olalım bir <xref:System.Collections.Generic.List%601> kullanarak farklı bir tür.</span><span class="sxs-lookup"><span data-stu-id="094e8-152">Let's make a <xref:System.Collections.Generic.List%601> using a different type.</span></span> <span data-ttu-id="094e8-153">Bir dizi sayının oluşturalım.</span><span class="sxs-lookup"><span data-stu-id="094e8-153">Let's build a set of numbers.</span></span> <span data-ttu-id="094e8-154">Şu ana kadar yazdığınız kodu silin ve bununla değiştirin:</span><span class="sxs-lookup"><span data-stu-id="094e8-154">Delete the code you wrote so far, and replace it with this:</span></span>


    ```csharp

    var fibonacciNumbers = new List<int> {1, 1};

    ```


    <span data-ttu-id="094e8-155">Tamsayı listesi oluşturur ve ilk iki tamsayı 1 değerine ayarlar.</span><span class="sxs-lookup"><span data-stu-id="094e8-155">That creates a list of integers, and sets the first two integers to the value 1.</span></span> <span data-ttu-id="094e8-156">İlk iki değerlerini bunlar bir *Fibonacci dizisi*, bir sayı dizisi üzerinde.</span><span class="sxs-lookup"><span data-stu-id="094e8-156">These are the first two values of a *Fibonacci Sequence*, a sequence of numbers.</span></span> <span data-ttu-id="094e8-157">Önceki iki sayının toplamı gerçekleştirerek sonraki her Fibonacci numarası bulunamadı.</span><span class="sxs-lookup"><span data-stu-id="094e8-157">Each next Fibonacci number is found by taking the sum of the previous two numbers.</span></span> <span data-ttu-id="094e8-158">Bu kodu ekleyin:</span><span class="sxs-lookup"><span data-stu-id="094e8-158">Add this code:</span></span>


    ```csharp

    var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];

    var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];


    fibonacciNumbers.Add(previous + previous2);


    foreach(var item in fibonacciNumbers)
        Console.WriteLine(item);
    ```


    <span data-ttu-id="094e8-159">Tuşuna **çalıştırma** ; sonuçları görmek için</span><span class="sxs-lookup"><span data-stu-id="094e8-159">Press **Run** to see the results;</span></span>


    > [!NOTE]

    > <span data-ttu-id="094e8-160">Bu çevrimiçi kodlama deneyimi Önizleme modundadır.</span><span class="sxs-lookup"><span data-stu-id="094e8-160">This online coding experience is in preview mode.</span></span> <span data-ttu-id="094e8-161">Sorunlarla karşılaşırsanız, Lütfen bunları rapor [dotnet/try deposunda](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="094e8-161">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="094e8-162">Sınama</span><span class="sxs-lookup"><span data-stu-id="094e8-162">Challenge</span></span>
  durationInMinutes: 10
  content: >
    <span data-ttu-id="094e8-163">Birlikte koyabilirsiniz varsa bkz. bazı kavramlar ve daha önce bu dersler.</span><span class="sxs-lookup"><span data-stu-id="094e8-163">See if you can put together some of the concepts from this and earlier lessons.</span></span> <span data-ttu-id="094e8-164">Ne kadar Fibonacci numaralarıyla derlediğiniz genişletin.</span><span class="sxs-lookup"><span data-stu-id="094e8-164">Expand on what you've built so far with Fibonacci Numbers.</span></span> <span data-ttu-id="094e8-165">Deneyin ve dizideki ilk 20 sayılar üretmek için kod yazın.</span><span class="sxs-lookup"><span data-stu-id="094e8-165">Try and write the code to generate the first 20 numbers in the sequence.</span></span> <span data-ttu-id="094e8-166">(Bir ipucu olarak 20 Fibonacci 6765 numarasıdır.)</span><span class="sxs-lookup"><span data-stu-id="094e8-166">(As a hint, the 20th Fibonacci number is 6765.)</span></span>


    > [!NOTE]

    > <span data-ttu-id="094e8-167">Bu çevrimiçi kodlama deneyimi Önizleme modundadır.</span><span class="sxs-lookup"><span data-stu-id="094e8-167">This online coding experience is in preview mode.</span></span> <span data-ttu-id="094e8-168">Sorunlarla karşılaşırsanız, Lütfen bunları rapor [dotnet/try deposunda](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="094e8-168">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="094e8-169">Görevi tamamlama</span><span class="sxs-lookup"><span data-stu-id="094e8-169">Complete challenge</span></span>
  durationInMinutes: 3
  content: >
    <span data-ttu-id="094e8-170">Bu gibi bir şeyle gündeme mı?</span><span class="sxs-lookup"><span data-stu-id="094e8-170">Did you come up with something like this?</span></span>


    ```csharp

    var fibonacciNumbers = new List<int> {1, 1};


    while (fibonacciNumbers.Count < 20)

    {
        var previous = fibonacciNumbers[fibonacciNumbers.Count - 1];
        var previous2 = fibonacciNumbers[fibonacciNumbers.Count - 2];

        fibonacciNumbers.Add(previous + previous2);
    }

    foreach(var item in fibonacciNumbers)
        Console.WriteLine(item);
    ```


    <span data-ttu-id="094e8-171">Döngünün her yinelemesinden son iki tamsayının listesinde, bunları fiyatının ve bu değer, listeye eklemeyi yönlendiriyoruz.</span><span class="sxs-lookup"><span data-stu-id="094e8-171">With each iteration of the loop, you're taking the last two integers in the list, summing them, and adding that value to the list.</span></span> <span data-ttu-id="094e8-172">20 öğe listesine ekleyene kadar döngü tekrarlanır.</span><span class="sxs-lookup"><span data-stu-id="094e8-172">The loop repeats until you've added 20 items to the list.</span></span>


    > [!NOTE]

    > <span data-ttu-id="094e8-173">Bu çevrimiçi kodlama deneyimi Önizleme modundadır.</span><span class="sxs-lookup"><span data-stu-id="094e8-173">This online coding experience is in preview mode.</span></span> <span data-ttu-id="094e8-174">Sorunlarla karşılaşırsanız, Lütfen bunları rapor [dotnet/try deposunda](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="094e8-174">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: >-
    <span data-ttu-id="094e8-175">Liste etkileşimli öğreticisini tamamladınız.</span><span class="sxs-lookup"><span data-stu-id="094e8-175">You've completed the list interactive tutorial.</span></span> <span data-ttu-id="094e8-176">Son giriş olan C# etkileşimli öğretici.</span><span class="sxs-lookup"><span data-stu-id="094e8-176">That's the final introduction to C# interactive tutorial.</span></span> <span data-ttu-id="094e8-177">Ziyaret ettiğiniz [.NET site](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial) .NET Core SDK'sını indirmek için makinenizde bir proje oluşturun ve kodlama tutun.</span><span class="sxs-lookup"><span data-stu-id="094e8-177">You can visit the [.NET site](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial) to download the .NET Core SDK, create a project on your machine, and keep coding.</span></span> <span data-ttu-id="094e8-178">"Öğrenme tut" adımı makinenizde projeleri derlemek için bu öğreticileri geri getirir.</span><span class="sxs-lookup"><span data-stu-id="094e8-178">The "Keep Learning" step brings you back to these tutorials to build projects on your machine.</span></span>


    <span data-ttu-id="094e8-179">Daha fazla bilgi edinebilirsiniz [.NET koleksiyonları](../../../standard/collections/index.md) aşağıdaki konularda yer:</span><span class="sxs-lookup"><span data-stu-id="094e8-179">You can learn more about [.NET collections](../../../standard/collections/index.md) in the following topics:</span></span>

    - [<span data-ttu-id="094e8-180">Bir koleksiyon türü seçme</span><span class="sxs-lookup"><span data-stu-id="094e8-180">Selecting a collection type</span></span>](../../../standard/collections/selecting-a-collection-class.md)

    - [<span data-ttu-id="094e8-181">Yaygın olarak kullanılan koleksiyon türleri</span><span class="sxs-lookup"><span data-stu-id="094e8-181">Commonly used collection types</span></span>](../../../standard/collections/commonly-used-collection-types.md)

    - [<span data-ttu-id="094e8-182">Genel koleksiyonlar kullanıldığı durumlar</span><span class="sxs-lookup"><span data-stu-id="094e8-182">When to use generic collections</span></span>](../../../standard/collections/when-to-use-generic-collections.md)
